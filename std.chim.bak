function m1() local __P_ = package.loaded['std/lang.option'] or {_package={},_types={}};package.loaded['std/lang.option'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.asOption={public=true,mutable=false,type="BgIJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAACQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgcAAVQAAQUAAAAA"};__S_.valueOr={public=true,mutable=false,type="BgMJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAABwABVAABBwABVAABAAA="};__S_.orElse={public=true,mutable=false,type="BgMJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAACQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgcAAVQAAQUAAAkBAANzdGQAC2xhbmcub3B0aW9uAAZPcHRpb24HAAFUAAEFAAAAAA=="};__S_.map={public=true,mutable=false,type="BgMJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAABgIJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAACQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgUHAAJhNQADAAAAAgABUgABVAkBAANzdGQAC2xhbmcub3B0aW9uAAZPcHRpb24FBwACYTUAAwAAAAA="};__T_.Option="CQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgcAAVQAAQUAAQABVA==";function __P_.asOption(value) return value end;function __P_.valueOr(opt,alternative) local tmp0;if type(opt) == "nil" then tmp0 = alternative else tmp0 = opt end;return tmp0 end;function __P_.orElse(opt,other) local tmp2;if type(opt) == "nil" then tmp2 = other else tmp2 = opt end;return tmp2 end;function __P_.map(opt,f) local tmp3;if type(opt) == "nil" then tmp3 = (nil) else local tmp4=f(opt);tmp3 = tmp4 end;return tmp3 end;return __P_ end;m1();function m2() local __P_ = package.loaded['std/lang.array'] or {_package={},_types={}};package.loaded['std/lang.array'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.insertAt={public=true,mutable=false,type="BgQKBwABVAABAAADBwABVAABBQAA"};__S_.removeAt={public=true,mutable=false,type="BgMKBwACYTQAAgAAAwcAAmE0AAIAAA=="};__S_.addLast={public=true,mutable=false,type="BgMKBwABVAABAAAHAAFUAAEFAAA="};__S_.removeLast={public=true,mutable=false,type="BgIKBwACYTgAAgAABwACYTgAAgAA"};__S_.push={public=true,mutable=false,type="BgMKBwABVAABAAAHAAFUAAEFAAA="};__S_.pop={public=true,mutable=false,type="BgIKBwADYTEyAAIAAAcAA2ExMgACAAA="};__S_.sort={public=true,mutable=false,type="BgIKBwABVAABAAAFAAA="};__S_.sortWith={public=true,mutable=false,type="BgMKBwABVAABAAAGAwcAAVQAAQcAAVQAAQEAAgABVAABVAUAAA=="};__S_.any={public=true,mutable=false,type="BgMKBwABVAABAAAGAgcAAVQAAQEAAQABVAEAAA=="};__S_.all={public=true,mutable=false,type="BgMKBwABVAABAAAGAgcAAVQAAQEAAQABVAEAAA=="};__S_.first={public=true,mutable=false,type="BgIKBwABVAABAAAJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAAAAA="};__S_.last={public=true,mutable=false,type="BgIKBwABVAABAAAJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBwABVAABBQAAAAA="};__S_.size={public=true,mutable=false,type="BgIKBwABVAABAAADAAA="};__S_.reverse={public=true,mutable=false,type="BgIKBwADYTMxAAIAAAoHAANhMzEAAgAAAAA="};__S_.map={public=true,mutable=false,type="BgMKBwABVAABAAAGAgcAAVQAAQcAA2EzNgACAAIAAVIAAVQKBwADYTM2AAIAAAAA"};__S_.forEach={public=true,mutable=false,type="BgMKBwABVAABAAAGAgcAAVQAAQUAAQABVAUAAA=="};__S_.fold={public=true,mutable=false,type="BgQKBwABVAABAAAHAAFSAAEGAwcAAVIAAQcAAVQAAQcAAVIAAQADAAFSAAFSAAFUBwABUgABAAA="};__S_.reduce={public=true,mutable=false,type="BgMKBwADYTQ2AAIAAAYDBwADYTQ2AAIHAANhNDYAAgcAA2E0NgACAAMAAVQAAVQAAVQHAANhNDYAAgAA"};__S_.intersperse={public=true,mutable=false,type="BgMKBwADYTYxAAIAAAcAA2E2MQACCgcAA2E2MQACAAAAAA=="};__S_.sum={public=true,mutable=false,type="BgIKAwAAAwAA"};__S_.joinToString={public=true,mutable=false,type="BgIKBAAABAAA"};__S_.joinToStringWithSeparator={public=true,mutable=false,type="BgMKBAAABAQAAA=="};local __std__lang = require("std/lang");function __P_.insertAt(arr,index,value) table.insert(arr, index, value);return nil end;function __P_.removeAt(arr,index) return table.remove(arr, index) end;function __P_.addLast(arr,value) table.insert(arr, value);return nil end;function __P_.removeLast(arr) return table.remove(arr) end;function __P_.push(arr,value) local tmp0=__P_.addLast(arr,value);return tmp0 end;function __P_.pop(arr) local tmp1=__P_.removeLast(arr);return tmp1 end;function __P_.sort(arr) table.sort(arr);return nil end;function __P_.sortWith(arr,comp) table.sort(arr, comp);return nil end;function __P_.any(arr,f) for i, v in ipairs(arr) do if f(v) then return true end end;return (false) end;function __P_.all(arr,f) for _, v in ipairs(arr) do if not f(v) then return false end end;return (true) end;function __P_.first(arr) return arr[1] end;function __P_.last(arr) return arr[#arr] end;function __P_.size(arr) return #arr end;function __P_.reverse(arr) local tmp2={};setmetatable(tmp2, array_meta_table);local result=tmp2;for _, v in ipairs(arr) do table.insert(result, 1, v) end;return result end;function __P_.map(arr,f) local tmp3={};setmetatable(tmp3, array_meta_table);local result=tmp3;for _, v in ipairs(arr) do table.insert(result, f(v)) end;return result end;function __P_.forEach(arr,f) for _, v in ipairs(arr) do f(v) end;return nil end;function __P_.fold(arr,initialValue,f) local acc=initialValue;for _, v in ipairs(arr) do acc = f(acc, v) end;return acc end;function __P_.reduce(arr,f) local tmp4=arr[(1)];local acc=tmp4;for i = 2, #arr do acc = f(acc, arr[i]) end;return acc end;function __P_.intersperse(a,el) local tmp5={};setmetatable(tmp5, array_meta_table);local result=tmp5;local tmp6=__P_.size(a);local len=tmp6;for idx,it in ipairs(a) do local tmp7=__P_.addLast(result,it);local tmp8;if (idx ~= len) then local tmp9=__P_.addLast(result,el);tmp8 = tmp9 end; end;return result end;function __P_.sum(arr) local tmp10=function(a,b) return (a + b) end;local tmp11=__P_.reduce(arr,tmp10);return tmp11 end;function __P_.joinToString(sa) return chistr.concat(unpack(sa)) end;function __P_.joinToStringWithSeparator(sa,sep) local tmp12=__P_.intersperse(sa,sep);local tmp13=__P_.joinToString(tmp12);return tmp13 end;return __P_ end;m2();function m3() local __P_ = package.loaded['std/lang.map'] or {_package={},_types={}};package.loaded['std/lang.map'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.emptyMap={public=false,mutable=false,type="BgEIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWAAA="};__S_.fromRecord={public=false,mutable=false,type="BgIIAAAAAAIAAUsAAVYIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWAAA="};__S_.put={public=false,mutable=false,type="BgQIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWBwABSwABBwABVgABBQAA"};__S_.get={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWBwABSwABBwACYTYAAgAA"};__S_.size={public=false,mutable=false,type="BgIIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWAwAA"};__S_.forEach={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWBgMHAAFLAAEHAAFWAAEFAAIAAUsAAVYFAAA="};__S_.mapKeys={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWBgMHAAFLAAEHAAFWAAEHAAFSAAEAAwABUgABSwABVggBAANzdGQACGxhbmcubWFwAANNYXAAAgAFY2xhc3MEAANtYXAAAAIAAUsAAVYAAA=="};__S_.mapValues={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWBgMHAAFLAAEHAAFWAAEHAAFSAAEAAwABUgABSwABVggBAANzdGQACGxhbmcubWFwAANNYXAAAgAFY2xhc3MEAANtYXAAAAIAAUsAAVYAAA=="};__S_.keys={public=false,mutable=false,type="BgIIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWCgcAA2EzMAACAAAAAA=="};__S_.values={public=false,mutable=false,type="BgIIAQADc3RkAAhsYW5nLm1hcAADTWFwAAIABWNsYXNzBAADbWFwAAACAAFLAAFWCgcAA2E0MQACAAAAAA=="};__T_.Map="CAEAA3N0ZAAIbGFuZy5tYXAAA01hcAACAAVjbGFzcwQAA21hcAAAAgABSwABVg==";local __std__lang = require("std/lang");local __std__lang_array = require("std/lang.array");function __P_.emptyMap() local tmp0 = java.new(String,'lang.map.Map');local tmp1={};setmetatable(tmp1, record_meta_table);local tmp2={class=(tmp0),map=tmp1};setmetatable(tmp2, record_meta_table);return tmp2 end;function __P_.fromRecord(r) local tmp3 = java.new(String,'lang.map.Map');local tmp4={class=(tmp3),map=r};setmetatable(tmp4, record_meta_table);return tmp4 end;function __P_.put(m,key,value) m.map[key] = value;return nil end;function __P_.get(m,key) return m.map[key] end;function __P_.size(m) local result=(0);for _ in pairs(m.map) do result = result + 1 end;return result end;function __P_.forEach(m,f) for k,v in pairs(m.map) do f(k,v) end;return nil end;function __P_.mapKeys(m,f) local tmp5=__P_.emptyMap();local new=tmp5;for k,v in pairs(m.map) do new.map[f(k,v)] = v end;return new end;function __P_.mapValues(m,f) local tmp6=__P_.emptyMap();local new=tmp6;for k,v in pairs(m.map) do new.map[k] = f(k,v) end;return new end;function __P_.keys(m) local tmp7={};setmetatable(tmp7, array_meta_table);local result=tmp7;local tmp8=function(k,v) local tmp9=__std__lang_array.push(result,k);return tmp9 end;local tmp10=__P_.forEach(m,tmp8);return result end;function __P_.values(m) local tmp11={};setmetatable(tmp11, array_meta_table);local result=tmp11;local tmp12=function(k,v) local tmp13=__std__lang_array.push(result,v);return tmp13 end;local tmp14=__P_.forEach(m,tmp12);return result end;return __P_ end;m3();function m4() local __P_ = package.loaded['std/lang.set'] or {_package={},_types={}};package.loaded['std/lang.set'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.emptySet={public=false,mutable=false,type="BgEIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUAAA="};__S_.fromArray={public=false,mutable=false,type="BgIKBwACYTcAAgAACAEAA3N0ZAAIbGFuZy5zZXQAA1NldAACAAVjbGFzcwQAA3NldAAAAQABVAAA"};__S_.add={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUBwABVAABBQAA"};__S_.remove={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUBwABVAABBQAA"};__S_.contains={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUBwABVAABAQAA"};__S_.size={public=false,mutable=false,type="BgIIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUAwAA"};__S_.forEach={public=false,mutable=false,type="BgMIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUBgIHAAFUAAEFAAEAAVQFAAA="};__S_.toArray={public=false,mutable=false,type="BgIIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUCgcAA2EyOQACAAAAAA=="};__S_.fold={public=false,mutable=false,type="BgQIAQADc3RkAAhsYW5nLnNldAADU2V0AAIABWNsYXNzBAADc2V0AAABAAFUBwABUgABBgMHAAFSAAEHAAFUAAEHAAFSAAEAAwABUgABUgABVAcAAVIAAQAA"};__T_.Set="CAEAA3N0ZAAIbGFuZy5zZXQAA1NldAACAAVjbGFzcwQAA3NldAAAAQABVA==";local __std__lang_array = require("std/lang.array");local __std__lang = require("std/lang");function __P_.emptySet() local tmp0 = java.new(String,'lang.set.Set');local tmp1={};setmetatable(tmp1, record_meta_table);local tmp2={class=(tmp0),set=tmp1};setmetatable(tmp2, record_meta_table);return tmp2 end;function __P_.fromArray(arr) local tmp3=__P_.emptySet();local set=tmp3;local tmp4=function(it) local tmp5=__P_.add(set,it);return tmp5 end;local tmp6=__std__lang_array.forEach(arr,tmp4);return set end;function __P_.add(set,value) set.set[value] = true;return nil end;function __P_.remove(set,value) set.set[value] = nil;return nil end;function __P_.contains(set,value) return set.set[value] or false end;function __P_.size(set) local result=(0);for _ in pairs(set.set) do result = result + 1 end;return result end;function __P_.forEach(set,f) for k,v in pairs(set.set) do f(k) end;return nil end;function __P_.toArray(set) local tmp8={};setmetatable(tmp8, array_meta_table);local result=tmp8;local tmp9=function(it) local tmp10=__std__lang_array.push(result,it);return tmp10 end;local tmp11=__P_.forEach(set,tmp9);return result end;function __P_.fold(set,initialValue,f) local acc=initialValue;for k,_ in pairs(set.set) do acc = f(acc, k) end;return acc end;return __P_ end;m4();function m5() local __P_ = package.loaded['std/lang.string'] or {_package={},_types={}};package.loaded['std/lang.string'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.len={public=true,mutable=false,type="BgIEAwAA"};__S_.reverse={public=true,mutable=false,type="BgIEBQAA"};__S_.find={public=true,mutable=false,type="BgMEBAkBAANzdGQAC2xhbmcub3B0aW9uAAZPcHRpb24DBQAAAAA="};__S_.findFrom={public=true,mutable=false,type="BgQEBAMJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uAwUAAAAA"};__S_.substringFrom={public=true,mutable=false,type="BgMEAwQAAA=="};__S_.substring={public=true,mutable=false,type="BgQEAwMEAAA="};__S_.toLower={public=true,mutable=false,type="BgIEBAAA"};__S_.toUpper={public=true,mutable=false,type="BgIEBAAA"};__S_.replace={public=true,mutable=false,type="BgQEBAQEAAA="};__S_.replaceAll={public=true,mutable=false,type="BgQEBAQEAAA="};__S_.codePointAt={public=true,mutable=false,type="BgMEAwMAAA=="};__S_.codePoints={public=true,mutable=false,type="BgIEBgEJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uAwUAAAAAAAA="};__S_.isWhitespace={public=true,mutable=false,type="BgIDAQAA"};__S_.isDigit={public=true,mutable=false,type="BgIDAQAA"};__S_.forEachCodePoint={public=true,mutable=false,type="BgMEBgIDBQAABQAA"};__S_.allCodePoints={public=true,mutable=false,type="BgMEBgIDAQAAAQAA"};__S_.anyCodePoint={public=true,mutable=false,type="BgMEBgIDAQAAAQAA"};__S_.isEmpty={public=true,mutable=false,type="BgIEAQAA"};__S_.isNotEmpty={public=true,mutable=false,type="BgIEAQAA"};__S_.isBlank={public=true,mutable=false,type="BgIEAQAA"};__S_.trimStart={public=true,mutable=false,type="BgIEBAAA"};__S_.trimEnd={public=true,mutable=false,type="BgIEBAAA"};__S_.trim={public=true,mutable=false,type="BgIEBAAA"};__S_.startsWith={public=true,mutable=false,type="BgMEBAEAAA=="};__S_.endsWith={public=true,mutable=false,type="BgMEBAEAAA=="};__S_.contains={public=true,mutable=false,type="BgMEBAEAAA=="};__S_.split={public=true,mutable=false,type="BgMEBAoEAAAAAA=="};__S_.removePrefix={public=true,mutable=false,type="BgMEBAQAAA=="};__T_.CodePoint="Aw==";local __std__lang = require("std/lang");function __P_.len(s) return s:length() end;function __P_.reverse(s) return chistr.reverse(s) end;function __P_.find(s,pattern) local index=s:indexOf(pattern);local tmp0;if (index > (0)) then tmp0 = (index + (1)) end;return tmp0 end;function __P_.findFrom(s,pattern,from) local index=s:indexOf(pattern, from-1);local tmp1;if (index > (0)) then tmp1 = (index + (1)) end;return tmp1 end;function __P_.substringFrom(s,from) return s:substring(from-1) end;function __P_.substring(s,from,to) return s:substring(from, to) end;function __P_.toLower(s) return s:toLowerCase() end;function __P_.toUpper(s) return s:toUpperCase() end;function __P_.replace(s,pattern,replacement) return s:replace(pattern, replacement) end;function __P_.replaceAll(s,pattern,replacement) return s:replaceAll(pattern, replacement) end;function __P_.codePointAt(s,index) return s:codePointAt(index-1) end;function __P_.codePoints(s) return chistr.codePoints(s) end;function __P_.isWhitespace(cp) return ((((28) <= cp) and (cp <= (32))) or (((9) <= cp) and (cp <= (14)))) end;function __P_.isDigit(codePoint) return (((48) <= codePoint) and (codePoint <= (57))) end;function __P_.forEachCodePoint(s,f) local tmp2=__P_.codePoints(s);for cp in tmp2 do local tmp3=f(cp); end;return nil end;function __P_.allCodePoints(s,f) local tmp4=__P_.codePoints(s);for cp in tmp4 do local tmp5;local tmp6=f(cp);local tmp7=not tmp6;if tmp7 then return (false); end; end;return (true) end;function __P_.anyCodePoint(s,f) local tmp8=__P_.codePoints(s);for cp in tmp8 do local tmp9;local tmp10=f(cp);if tmp10 then return (true); end; end;return (false) end;function __P_.isEmpty(s) return s:isEmpty() end;function __P_.isNotEmpty(s) local tmp11=__P_.isEmpty(s);local tmp12=not tmp11;return tmp12 end;function __P_.isBlank(s) local tmp13=__P_.allCodePoints(s,__P_.isWhitespace);return tmp13 end;function __P_.trimStart(s) return chistr.trimStart(s) end;function __P_.trimEnd(s) return chistr.trimEnd(s) end;function __P_.trim(s) return s:trim() end;function __P_.startsWith(s,other) return s:startsWith(other) end;function __P_.endsWith(s,other) return s:endsWith(other) end;function __P_.contains(s,other) return s:contains(other) end;function __P_.split(s,pattern) local array=java.luaify(s:split(pattern));setmetatable(array, array_meta_table);return array end;function __P_.removePrefix(s,prefix) local tmp14;local tmp15=__P_.startsWith(s,prefix);if tmp15 then local tmp16=__P_.len(prefix);local tmp17=__P_.substringFrom(s,(tmp16 + (1)));tmp14 = tmp17 else tmp14 = s end;return tmp14 end;return __P_ end;m5();function m6() local __P_ = package.loaded['std/io'] or {_package={},_types={}};package.loaded['std/io'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.readLine={public=true,mutable=false,type="BgEEAAA="};local __std__lang = require("std/lang");function __P_.readLine() local tmp0=tostring(java.luaify(io.read()));return tmp0 end;return __P_ end;m6();function m7() local __P_ = package.loaded['std/io.file'] or {_package={},_types={}};package.loaded['std/io.file'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.lineIterator={public=true,mutable=false,type="BgIEBgEJAQADc3RkAAtsYW5nLm9wdGlvbgAGT3B0aW9uBAUAAAAAAAA="};__S_.readAllLines={public=true,mutable=false,type="BgIECgQAAAAA"};__S_.writeString={public=true,mutable=false,type="BgMEBAUAAA=="};__S_.readString={public=true,mutable=false,type="BgIEBAAA"};__S_.open={public=true,mutable=false,type="BgMEBAkBAANzdGQAC2xhbmcub3B0aW9uAAZPcHRpb24IAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAUAAAAA"};__S_.flush={public=true,mutable=false,type="BgIIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAUAAA=="};__S_.lines={public=true,mutable=false,type="BgIIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAYBCQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgQFAAAAAAAA"};__S_.seekStart={public=true,mutable=false,type="BgMIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAMFAAA="};__S_.seek={public=true,mutable=false,type="BgMIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAMFAAA="};__S_.seekEnd={public=true,mutable=false,type="BgMIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAMFAAA="};__S_.close={public=true,mutable=false,type="BgIIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAUAAA=="};__S_.write={public=true,mutable=false,type="BgMIAQADc3RkAAdpby5maWxlAARGaWxlAAIABWNsYXNzBAAEZmlsZQAAAAkACQAEAgAAAwAABQAA"};__T_.File="CAEAA3N0ZAAHaW8uZmlsZQAERmlsZQACAAVjbGFzcwQABGZpbGUAAAA=";local __std__lang = require("std/lang");function __P_.lineIterator(fileName) return io.lines(java.luaify(fileName)) end;function __P_.readAllLines(fileName) local tmp0={};setmetatable(tmp0, array_meta_table);local a=tmp0;for line in io.lines(java.luaify(fileName)) do table.insert(a,line) end;return a end;function __P_.writeString(fileName,value) local f=io.open(java.luaify(fileName),'w');f:write(value);f:close();return nil end;function __P_.readString(fileName) local f=io.open(java.luaify(fileName),'r');local r=f:read('a');f:close();return r end;function __P_.open(name,mode) local tmp1 = java.new(String,'io.file.File');local tmp2={class=(tmp1),file=(nil)};setmetatable(tmp2, record_meta_table);local f=tmp2;f.file = io.open(java.luaify(name), java.luaify(mode));if f.file == nil then return nil end;return f end;function __P_.flush(file) file.file:flush();return nil end;function __P_.lines(file) return file.file:lines() end;function __P_.seekStart(file,offset) file.file:seek('set', offset);return nil end;function __P_.seek(file,offset) file.file:seek('cur', offset);return nil end;function __P_.seekEnd(file,offset) file.file:seek('end', offset);return nil end;function __P_.close(file) io.close(file.file);return nil end;function __P_.write(file,value) file.file:write(value);return nil end;return __P_ end;m7();function m8() local __P_ = package.loaded['std/math'] or {_package={},_types={}};package.loaded['std/math'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.maxInt={public=true,mutable=false,type="Aw=="};__S_.minInt={public=true,mutable=false,type="Aw=="};__S_.inf={public=true,mutable=false,type="Aw=="};__S_.finf={public=true,mutable=false,type="Ag=="};__S_.pi={public=true,mutable=false,type="Ag=="};__S_.abs={public=true,mutable=false,type="BgIDAwAA"};__S_.min={public=true,mutable=false,type="BgMDAwMAAA=="};__S_.fmin={public=true,mutable=false,type="BgMCAgIAAA=="};__S_.max={public=true,mutable=false,type="BgMDAwMAAA=="};__S_.fmax={public=true,mutable=false,type="BgMCAgIAAA=="};__S_.fabs={public=true,mutable=false,type="BgICAgAA"};__S_.cos={public=true,mutable=false,type="BgICAgAA"};__S_.acos={public=true,mutable=false,type="BgICAgAA"};__S_.cosh={public=true,mutable=false,type="BgICAgAA"};__S_.sin={public=true,mutable=false,type="BgICAgAA"};__S_.asin={public=true,mutable=false,type="BgICAgAA"};__S_.sinh={public=true,mutable=false,type="BgICAgAA"};__S_.tan={public=true,mutable=false,type="BgICAgAA"};__S_.atan={public=true,mutable=false,type="BgICAgAA"};__S_.tanh={public=true,mutable=false,type="BgICAgAA"};__S_.degrees={public=true,mutable=false,type="BgICAgAA"};__S_.radians={public=true,mutable=false,type="BgICAgAA"};__S_.ceil={public=true,mutable=false,type="BgICAgAA"};__S_.floor={public=true,mutable=false,type="BgICAgAA"};__S_.exp={public=true,mutable=false,type="BgICAgAA"};__S_.log={public=true,mutable=false,type="BgMCAgIAAA=="};__S_.pow={public=true,mutable=false,type="BgMDAwMAAA=="};__S_.fpow={public=true,mutable=false,type="BgMCAgIAAA=="};__S_.sqrt={public=true,mutable=false,type="BgICAgAA"};__S_.modf={public=true,mutable=false,type="BgICCAAAAgABaQMAAWYCAAAAAA=="};__S_.fmod={public=true,mutable=false,type="BgMCAgIAAA=="};local __std__lang = require("std/lang");__P_.maxInt=math.maxinteger;__P_.minInt=math.mininteger;__P_.inf=math.huge;local tmp0=tonumber(math.huge);__P_.finf=tmp0;local tmp1=tonumber(math.pi);__P_.pi=tmp1;function __P_.abs(x) return math.abs(x) end;function __P_.min(a,b) return math.min(a,b) end;function __P_.fmin(a,b) return math.min(a,b) end;function __P_.max(a,b) return math.max(a,b) end;function __P_.fmax(a,b) return math.max(a,b) end;function __P_.fabs(x) return math.abs(x) end;function __P_.cos(x) return math.cos(x) end;function __P_.acos(x) return math.acos(x) end;function __P_.cosh(x) return math.cosh(x) end;function __P_.sin(x) return math.sin(x) end;function __P_.asin(x) return math.asin(x) end;function __P_.sinh(x) return math.sinh(x) end;function __P_.tan(x) return math.tan(x) end;function __P_.atan(x) return math.atan(x) end;function __P_.tanh(x) return math.tanh(x) end;function __P_.degrees(radians) return math.deg(radians) end;function __P_.radians(degrees) return math.rad(degrees) end;function __P_.ceil(x) return math.ceil(x) end;function __P_.floor(x) return math.floor(x) end;function __P_.exp(x) return math.exp(x) end;function __P_.log(x,base) return math.log(x,base) end;function __P_.pow(x,y) return math.pow(x,y) end;function __P_.fpow(x,y) return math.pow(x,y) end;function __P_.sqrt(x) return math.sqrt(x) end;function __P_.modf(x) local i=(0);local f=(0.0);i,f=math.modf(x);local tmp2={i=i,f=f};setmetatable(tmp2, record_meta_table);return tmp2 end;function __P_.fmod(x,y) return math.fmod(x,y) end;return __P_ end;m8();function m9() local __P_ = package.loaded['std/math.random'] or {_package={},_types={}};package.loaded['std/math.random'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.seed={public=true,mutable=false,type="BgIDBQAA"};__S_.randomInt={public=true,mutable=false,type="BgMDAwMAAA=="};__S_.randomFloat={public=true,mutable=false,type="BgECAAA="};local __std__lang = require("std/lang");function __P_.seed(seed) return math.randomseed(seed) end;function __P_.randomInt(s,e) return math.random(s,e) end;function __P_.randomFloat() return math.random() end;return __P_ end;m9();function m10() local __P_ = package.loaded['std/lang'] or {_package={},_types={}};package.loaded['std/lang'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.loadLuaCode={public=true,mutable=false,type="BgIEBgEFAAAAAA=="};__S_.evalFile={public=true,mutable=false,type="BgIEBQAA"};__S_.compileConcat={public=true,mutable=false,type="BgMKBAAACAAAAgATbG9hZENvbXBpbGVkTW9kdWxlcwEAB3ZlcmJvc2UBAAAEAAA="};__S_.generateBytecode={public=true,mutable=false,type="BgIGAQUAAAQAAA=="};__S_.compileModule={public=true,mutable=false,type="BgQECgQAAAgAAAMAE2xvYWRDb21waWxlZE1vZHVsZXMBAAd2ZXJib3NlAQAGYmluYXJ5AQAABQAA"};local __std__io_file = require("std/io.file");local __std__lang_array = require("std/lang.array");function __P_.loadLuaCode(luaCode) return load(luaCode) end;function __P_.evalFile(fileName) local tmp0=__std__io_file.readString(fileName);local chiCode=tmp0;local tmp1=__P_.compileLua(chiCode);local luaCode=tmp1;local tmp2=__P_.loadLuaCode(luaCode);local loader=tmp2;local tmp3=loader();return tmp3 end;function __P_.compileConcat(files,opts) local i=(1);local tmp4={};setmetatable(tmp4, array_meta_table);local results=tmp4;local tmp7=function() return i end;local tmp5=tmp7;local tmp8=function() local tmp9=__std__lang_array.size(files);return tmp9 end;local tmp6=tmp8;while (tmp5() <= tmp6()) do local tmp10=files[i];local fileName=tmp10;local tmp11;if opts.verbose then local tmp12 = java.new(String,'Compiling ');local tmp13=tostring(java.luaify(fileName));local tmp14 = java.new(String,'...');local tmp15=chistr.concat((tmp12),tmp13,(tmp14));local tmp16=__P_.println(tmp15);tmp11 = tmp16 end;local tmp17=__std__io_file.readString(fileName);local chiCode=tmp17;local tmp18=__P_.compileLua(chiCode);local luaCode=tmp18;local tmp19 = java.new(String,'function m');local tmp20=tostring(java.luaify(i));local tmp21 = java.new(String,'() ');local tmp22=chistr.concat((tmp19),tmp20,(tmp21));local tmp23=__std__lang_array.push(results,tmp22);local tmp24=__std__lang_array.push(results,luaCode);local tmp25 = java.new(String,' end;m');local tmp26=tostring(java.luaify(i));local tmp27 = java.new(String,'();');local tmp28=chistr.concat((tmp25),tmp26,(tmp27));local tmp29=__std__lang_array.push(results,tmp28);local tmp30;if opts.loadCompiledModules then local tmp31=__P_.loadLuaCode(luaCode);local loader=tmp31;local tmp32=loader();tmp30 = tmp32 end;local tmp33=tonumber(i);i=(i + (1));end;return table.concat(results) end;function __P_.generateBytecode(f) return string.dump(f) end;function __P_.compileModule(fileName,components,opts) local tmp34=__P_.compileConcat(components,opts);local luaCode=tmp34;local tmp35;if opts.binary then local tmp36=__P_.loadLuaCode(luaCode);local loaderFunction=tmp36;local tmp37=__P_.generateBytecode(loaderFunction);local bytecode=tmp37;local tmp38=__std__io_file.writeString(fileName,bytecode);tmp35 = tmp38 else local tmp39=__std__io_file.writeString(fileName,luaCode);tmp35 = tmp39 end;return tmp35 end;return __P_ end;m10();function m11() local __P_ = package.loaded['std/utils'] or {_package={},_types={}};package.loaded['std/utils'] = __P_;local __S_ = __P_._package;local __T_ = __P_._types;__S_.range={public=false,mutable=false,type="BgMDAwYBCQEAA3N0ZAALbGFuZy5vcHRpb24ABk9wdGlvbgMFAAAAAAAA"};function __P_.range(from,to) local next=from;local tmp0=function() local tmp1;if (next < to) then next=(next + (1));tmp1 = (next - (1)) end;return tmp1 end;return tmp0 end;return __P_ end;m11();